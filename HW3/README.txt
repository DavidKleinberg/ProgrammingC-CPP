File: README
Homework 3, 600.120 Spring 2017

600.120 | dkleinb1
dkleinb1@jhu.edu
~~~~~~~~~~~~~~~~~~
David A. Kleinberg
Assignment 3
02-28-2017


*Note: 

After the first submission, in my revisions to make my code more efficient,
I found a very minor oversight in my GPA calculator. I changed the "i" inside
the for loop's condition statement from a 4 to a 5. I hope this modification
can be included in the functionality test. I have been sick with the flu and
did not ask for an extension. It is a very small and likely oversight to make
when completing an assignment with a fever. Moreover, I have put in a lot of
work in delivering a clean, well written program with good comments.

Additionally I added the "no matches prompt". I hope these changes can be considered.


Below are the files included for assignment 3:
	
	1. HW3a.c
		- This program is a course encoder.
		- It takes an input and output file name as command line arguments.
		- It reads the courses listed, converts them to unsigned integer
			values, saves these values to the specified output file, and
			then prints:

				the original string, the number value, the binary translation

	2. HW3b.c
		- This program is a course decoder and query handler.
		- It takes an input file name as command line arguments.
			(usually the output from HW3a.c)
		- Stores these values and interprets them in many ways.
		- Prompts the user for standard input.

	3. input.txt
		- This is the text file with the course strings that I think is necessary
			to show the functionality of the program.

$ ./HW3a input.txt output.txt
ME.000.000A+0.0  0  00000000000000000000000000000000
BU.000.000A+0.0  536870912  00100000000000000000000000000000
ED.000.000A+0.0  1073741824  01000000000000000000000000000000
EN.000.000A+0.0  1610612736  01100000000000000000000000000000
AS.000.000A+0.0  2147483648  10000000000000000000000000000000
PH.000.000A+0.0  2684354560  10100000000000000000000000000000
PY.000.000A+0.0  3221225472  11000000000000000000000000000000
SA.000.000A+0.0  3758096384  11100000000000000000000000000000
ME.992.000A+0.0  520093696  00011111000000000000000000000000
ME.960.000A+0.0  503316480  00011110000000000000000000000000
ME.896.000A+0.0  469762048  00011100000000000000000000000000
ME.768.000A+0.0  402653184  00011000000000000000000000000000
ME.512.000A+0.0  268435456  00010000000000000000000000000000
ME.031.000A+0.0  16252928  00000000111110000000000000000000
ME.030.000A+0.0  15728640  00000000111100000000000000000000
ME.028.000A+0.0  14680064  00000000111000000000000000000000
ME.024.000A+0.0  12582912  00000000110000000000000000000000
ME.016.000A+0.0  8388608  00000000100000000000000000000000
ME.000.992A+0.0  507904  00000000000001111100000000000000
ME.000.960A+0.0  491520  00000000000001111000000000000000
ME.000.896A+0.0  458752  00000000000001110000000000000000
ME.000.768A+0.0  393216  00000000000001100000000000000000
ME.000.512A+0.0  262144  00000000000001000000000000000000
ME.000.031A+0.0  15872  00000000000000000011111000000000
ME.000.030A+0.0  15360  00000000000000000011110000000000
ME.000.028A+0.0  14336  00000000000000000011100000000000
ME.000.024A+0.0  12288  00000000000000000011000000000000
ME.000.016A+0.0  8192  00000000000000000010000000000000
ME.000.000B+0.0  64  00000000000000000000000001000000
ME.000.000C+0.0  128  00000000000000000000000010000000
ME.000.000D+0.0  192  00000000000000000000000011000000
ME.000.000F+0.0  256  00000000000000000000000100000000
ME.000.000I+0.0  320  00000000000000000000000101000000
ME.000.000S+0.0  384  00000000000000000000000110000000
ME.000.000U+0.0  448  00000000000000000000000111000000
ME.000.000A-0.0  16  00000000000000000000000000010000
ME.000.000A/0.0  32  00000000000000000000000000100000
ME.000.000A+1.0  2  00000000000000000000000000000010
ME.000.000A+2.0  4  00000000000000000000000000000100
ME.000.000A+3.0  6  00000000000000000000000000000110
ME.000.000A+4.0  8  00000000000000000000000000001000
ME.000.000A+5.0  10  00000000000000000000000000001010
ME.000.000A+0.5  1  00000000000000000000000000000001

	As you can see up to here, the input.txt, when
	run through HW3a.c tests each bit.

	Below are more course strings to help test functionality
	in HW3b.c's program.

ME.000.000A-4.5  25  00000000000000000000000000011001
ME.000.000B+4.5  73  00000000000000000000000001001001
ME.000.000B/4.5  105  00000000000000000000000001101001
ME.000.000B-4.5  89  00000000000000000000000001011001
ME.000.000C+4.5  137  00000000000000000000000010001001
ME.000.000C/4.5  169  00000000000000000000000010101001
ME.000.000C-4.5  153  00000000000000000000000010011001
ME.000.000D+4.5  201  00000000000000000000000011001001
ME.000.000D/4.5  233  00000000000000000000000011101001
ME.000.000D-4.5  217  00000000000000000000000011011001